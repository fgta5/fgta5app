<!DOCTYPE html>
<html>
	<head>
		<title><%= modulename %></title>
		<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
		<meta http-equiv="X-UA-Compatible" content="IE=edge">

		<% if (fgta5jsDebugMode) { %>
			<!-- DEBUG MODE -->
			<script type="module" src="public/libs/fgta5js/src/main.mjs"></script>
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-root.css" />
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-messagebox.css" />
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-modal.css" />
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-entry.css" />
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-checkbox.css" />
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-gridview.css" />
			<link rel="stylesheet" href="public/libs/fgta5js/styles/fgta5js-appmanager.css" />

		<% } else { %>
			<!-- PRODUCTION -->
			<script src="public/libs/fgta5js/dist/fgta5js<%=fgta5jsVersion%>.min.js"></script>
			<link rel="stylesheet" href="public/libs/fgta5js/dist/fgta5js<%=fgta5jsVersion%>.min.css" /> 
		<% } %>	



		<link rel="stylesheet" href="public/modules/module.css" />
		<% if (cssExists) { %>
		<link rel="stylesheet" href="public/modules/<%= `${modulename}/${modulename}.css` %>" />
		<% } %>

		<style>
			#loadingindicator {
				position: fixed; top: 0; left: 0; right: 0; bottom: 0; display: flex; justify-content: center; align-items: center; background-color: #fff;
				transition: opacity 0.5s ease, visibility 0.5s ease;
			}
		</style>

		<style>
			@import url("public/fonts/karla.css");
			* { font-family: "Karla"; }
			input { user-select: text; }
			dialog { outline: none; }
			body {
				background-color: white;
				overscroll-behavior-y: contain;
				user-select: none;
				padding: 0px;
				margin: 0px;
				overscroll-behavior: contain;
				font-size: 14px;
			}

			/* khusus mobile */
			@media screen and (max-width: 500px) { 
				html, body, input, button { font-size: 20px; }
			}
		</style>


	</head>
	<body>
		<div id="loadingindicator">
			<div style="font-family: system-ui, sans-serif">
				loading module...
			</div>
		</div>		

		<!-- <%= modulename %> -->
		<main id="mainapp"> 
		<%- include(`${modulename}/${modulename}.ejs`) %>
		</main>
		<div id="extender-templates" style="display: none;">
			<% if (htmlExtenderExists) { %>
			<%- include(htmlExtender) %>
			<% } %>
		</div>
	</body>

	<script type="module">

		function removeLoadingIndicator() {
			const mainapp = document.getElementById('mainapp')
			const pagemask = document.getElementById('loadingindicator')
			mainapp.classList.remove('hidden')
			setTimeout(()=>{
				pagemask.style.opacity = 0
				pagemask.style.visibility = 'hidden'
				setTimeout(()=>{
					pagemask.parentNode.removeChild(pagemask)
				}, 500)
			}, 50)
		}

		async function preRender() {
			// loading  prerender mjs...  <% if (mjsPrerenderExists) { %> 
			const Prerenderer = await import('./public/modules/<%= `${modulename}/${modulename}-prerender.mjs` %>')
			await Prerenderer.prerender()
			// <% } else { %>
			// prerender does not exist
			// if you need to prerender page before processing,
			// you can create file <%= `${modulename}-prerender.mjs` %>
			// and export function prerender()
			// <% } %>
		}

		async function Start() {
			// loading mjs...  <% if (!mjsExists) { %> 
			// Module belum didefinisikan
			console.warn("empty module: './public/modules/<%= `${modulename}/${mjsFileName}` %>' not found!")
			removeLoadingIndicator()
			return
			// <% } %>

			window.addEventListener("load", async (event) => {
				await preRender()

				const Application = await import('./public/modules/<%= `${modulename}/${mjsFileName}` %>'	)
				try {
					const $app = new Application.default();
					await $app.main();
				} catch (err) {
					console.error(err)
					const mainapp = document.getElementById('mainapp')
					mainapp.innerHTML = '<h1>Module Error</h1><div>' + err.message + '</div>'
				} finally {
					removeLoadingIndicator()
				}
			});
		}

		Start()

	</script>		
</html>